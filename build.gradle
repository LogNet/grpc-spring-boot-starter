buildscript {
    ext {
        springBoot_1_X_Version = '1.5.13.RELEASE'
        springBoot_2_X_Version = '2.0.3.RELEASE'
        grpcVersion = '1.19.0'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://plugins.gradle.org/m2/" }

    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.5"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
        classpath 'com.palantir:jacoco-coverage:0.4.0'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.20.0"
        classpath "de.marcphilipp.gradle:nexus-publish-plugin:0.1.1"
    }
}

allprojects { pr ->
    pr['signing.keyId'] = System.getenv('GPG_ID')
    pr['signing.password'] = System.getenv('GPG_PASSWORD')
    pr['signing.secretKeyRingFile'] = '/home/travis/.gnupg/secring.gpg'


}
apply plugin: 'idea'
apply plugin: 'com.palantir.jacoco-full-report'
apply plugin: 'jacoco'
apply from: "${rootDir}/publishSonatype.gradle"


allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'


    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    test {
        forkEvery = 1
        testLogging {
            exceptionFormat = 'full'
        }
    }


    dependencies {
        compileOnly('org.projectlombok:lombok:1.16.20')
        testCompileOnly('org.projectlombok:lombok:1.16.20')
    }

}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    sourceSets project('grpc-spring-boot-starter').sourceSets.main

    //subprojects.each {
    //sourceSets it.sourceSets.main
    //}

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
